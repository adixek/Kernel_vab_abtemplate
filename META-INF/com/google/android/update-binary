#!/sbin/sh
# TWRP A/B Installer Backend
# by osm0sis, Dees_Troy and topjohnwu

OUTFD=/proc/self/fd/$2;
ZIPFILE="$3";

ui_print() {
  if $BOOTMODE; then
    echo "$1";
  else
    echo -e "ui_print $1\nui_print" >> $OUTFD;
  fi;
}
abort() { ui_print " "; ui_print "$1"; exit 1; }

# detect Magisk app/booted flashing
BOOTMODE=false;
ps | grep zygote | grep -v grep >/dev/null && BOOTMODE=true;
$BOOTMODE || ps -A 2>/dev/null | grep zygote | grep -v grep >/dev/null && BOOTMODE=true;

ui_print "########################################";
ui_print "#    Kernel Flasher For Xiaomi Sky     #";
ui_print "########################################";
ui_print " ";

# /dev/tmp is safe for both booted and recovery installs
tmp=/dev/tmp/kernel-install;

# target partition without the slot suffix
  target=/dev/block/bootdevice/by-name/boot;
name=$(basename $target);

ui_print "Unpacking the installer...";
rm -rf $tmp;
mkdir -p $tmp;
unzip -o "$ZIPFILE" -d $tmp || abort "Failed to extract zip!";

cd $tmp;
bootimg=`(ls boot*.img || ls Boot.img|| ls BOOT.img) 2>/dev/null`;
[ "$bootimg" ] || abort "No boot image found in zip!";

ui_print " ";
for slot in _a _b; do
    ui_print "Flashing image to $name$slot...";
    cp -f $bootimg new-boot.img;
  fi;

  blockdev --setrw $target$slot;
  cat new-boot.img /dev/zero > $target$slot 2>/dev/null || true;
  rm -f new-boot.img;
done;

cd /;
rm -rf /dev/tmp;

ui_print " ";
ui_print "Done installing Boot image!";
